openapi: 3.0.1
info:
  title: weather-queue
  description: 'This API is used for requesting data collection and reading this data.'
  version: '0.1'
externalDocs:
  description: Github page
  url: https://github.com/szoz/weather-queue
tags:
  - name: miscellaneous
    description: miscellaneous endpoints
  - name: redis
    description: redis debug
  - name: jobs
    description: adding and reading job details
paths:
  /:
    get:
      tags:
        - miscellaneous
      summary: Return simple greeting.
      operationId: get_root
      parameters:
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
  /redis:
    get:
      tags:
        - redis
      summary: Return list of all Redis keys with given pattern.
      operationId: redis_find_keys
      parameters:
        - name: pattern
          in: query
          description: Pattern for finding Redis keys
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /redis/{key}:
    get:
      tags:
        - redis
      summary: Return value of given Redis key.
      operationId: redis_get_value
      parameters:
        - name: key
          in: path
          description: Redis key
          schema:
            type: string
          required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
        404:
          description: key not found
  /jobs:
    post:
      tags:
        - jobs
      summary: Create new job - collecting weather data for given cities list."
      operationId: create_job
      parameters:
        - name: cities
          in: query
          description: Cities for weather data in format 'city,city,city'
          schema:
            type: string
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
        422:
          description: wrong argument format
    get:
      tags:
        - jobs
      summary: Return all jobs ids grouped by job status.
      operationId: read_all_jobs
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  started:
                    type: string
                  deferred:
                    type: string
                  finished:
                    type: string
                  failed:
                    type: string
                  scheduled:
                    type: string
  /jobs/{id}:
    get:
      tags:
        - jobs
      summary: Return job details based on given job id.
      operationId: read_job
      parameters:
        - name: id
          in: path
          description: job id
          schema:
            type: string
          required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
        404:
          description: job not found